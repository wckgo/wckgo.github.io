(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{192:function(t,a,e){"use strict";e.r(a);var i=e(0),r=Object(i.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"内联格式化上下文"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内联格式化上下文","aria-hidden":"true"}},[t._v("#")]),t._v(" 内联格式化上下文")]),t._v(" "),e("p",[t._v("IFC(Inline Formatting Contexts)，内联格式化上下文。IFC 中的 line-box （也称行盒）的高度是根据包含行内元素中最高的实际高度计算而来。（不受垂直方向的 padding/margin 的影响")]),t._v(" "),e("h2",{attrs:{id:"规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#规范","aria-hidden":"true"}},[t._v("#")]),t._v(" 规范")]),t._v(" "),e("p",[t._v("行内元素从包含块顶端水平方向上逐一排列，水平方向上的 margin/border/padding 生效。行内元素在垂直方向上可按照顶部、底部或基线对其。\n当几个行内元素不能在一个单独的行盒中水平放置时，他们会被分配给两个或更多的(vertically-stacked line boxes)垂直栈上的行盒，因此，一个段落是很多行盒的垂直栈。这些行盒不会在垂直方向上被分离（除非在其他地方有特殊规定），并且他们也不重叠。")]),t._v(" "),e("ul",[e("li",[t._v("垂直方向上，当行内元素的高度比行盒要低，那么 vertical-align 属性决定垂直方向上的对齐方式。")]),t._v(" "),e("li",[t._v("水平方向上，当行内元素的总宽度比行盒要小，那么行内元素在水平方向上的分部由 text-align 决定。")]),t._v(" "),e("li",[t._v("水平方向上，当行内元素的总宽度超过了行盒，那么行内元素会被分配到多个行盒中去，如果设置了不可折行等属性，那么行内元素会溢出行盒。")]),t._v(" "),e("li",[t._v("行盒的左右两边都会触碰到包含块，而 float 元素则会被放置在行盒和包含快边缘的中间位置。")])]),t._v(" "),e("h2",{attrs:{id:"作用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#作用","aria-hidden":"true"}},[t._v("#")]),t._v(" 作用")]),t._v(" "),e("ul",[e("li",[t._v("行内元素按照 "),e("code",[t._v("text-align")]),t._v(" 进行水平居中")]),t._v(" "),e("li",[t._v("行内元素撑开父元素高度，通过 "),e("code",[t._v("vertical-align")]),t._v(" 属性进行垂直居中")])])])},[],!1,null,null,null);a.default=r.exports}}]);